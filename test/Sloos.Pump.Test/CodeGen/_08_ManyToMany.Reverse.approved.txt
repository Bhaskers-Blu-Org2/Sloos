namespace Fact.Models
{
    public partial class Context : global::System.Data.Entity.DbContext
    {
        static Context()
        {
            global::System.Data.Entity.Database.SetInitializer<Context>(null);
        }

        public Context(string nameOrConnectionString)
            : base(nameOrConnectionString)
        {
        }

        public global::System.Data.Entity.DbSet<global::Fact.Models.Post> Posts { get; set; }
        public global::System.Data.Entity.DbSet<global::Fact.Models.Tag> Tags { get; set; }

        protected override void OnModelCreating(global::System.Data.Entity.DbModelBuilder modelBuilder)
        {
            modelBuilder.Configurations.Add(new global::Fact.Models.Mapping.PostMap());
            modelBuilder.Configurations.Add(new global::Fact.Models.Mapping.TagMap());
        }
    }
}


namespace Fact.Models
{
    public partial class Post
    {
        public Post()
        {
            this.Tags = new global::System.Collections.Generic.List<Tag>();
        }
        public global::System.Int32 PostId { get; set; }
        public virtual global::System.Collections.Generic.ICollection<Tag> Tags { get; set; }
    }
}


namespace Fact.Models
{
    public partial class Tag
    {
        public Tag()
        {
            this.Posts = new global::System.Collections.Generic.List<Post>();
        }
        public global::System.Int32 TagId { get; set; }
        public global::System.String Name { get; set; }
        public virtual global::System.Collections.Generic.ICollection<Post> Posts { get; set; }
    }
}


namespace Fact.Models.Mapping
{
    public class PostMap : global::System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Post>
    {
        public PostMap()
        {
            // Primary Key
            this.HasKey(x => x.PostId);

            // Properties

            // Table & Column Mappings
            this.ToTable("Posts", "dbo");
            this.Property(x => x.PostId).HasColumnName("PostId");

            // Relationships
            this.HasMany(x => x.Tags)
                .WithMany(x => x.Posts)
                .Map(x =>
                    {
                        x.ToTable("PostTags");
                        x.MapLeftKey("Post_PostId");
                        x.MapRightKey("Tag_TagId");
                    });
        }
    }
}

namespace Fact.Models.Mapping
{
    public class TagMap : global::System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Tag>
    {
        public TagMap()
        {
            // Primary Key
            this.HasKey(x => x.TagId);

            // Properties

            // Table & Column Mappings
            this.ToTable("Tags", "dbo");
            this.Property(x => x.TagId).HasColumnName("TagId");
            this.Property(x => x.Name).HasColumnName("Name");

            // Relationships
        }
    }
}

